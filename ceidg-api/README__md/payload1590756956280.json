{"tree":{"path":"/","name":"repository","type":"dir","children":[{"path":"/ceidg-api","name":"ceidg-api","type":"dir","children":[{"path":"/ceidg-api/src","name":"src","type":"dir","children":[{"path":"/ceidg-api/src/Contracts","name":"Contracts","type":"dir","children":[{"path":"/ceidg-api/src/Contracts/CeidgApiContract.php","name":"CeidgApiContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Contracts/CeidgEnvelopeContract.php","name":"CeidgEnvelopeContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Contracts/ValidatorContract.php","name":"ValidatorContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Contracts/XmlParserContract.php","name":"XmlParserContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/Envelopes","name":"Envelopes","type":"dir","children":[{"path":"/ceidg-api/src/Envelopes/CeidgEnvelope.php","name":"CeidgEnvelope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Envelopes/GetId.php","name":"GetId.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Envelopes/GetMigrationData.php","name":"GetMigrationData.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Envelopes/GetMigrationData201901.php","name":"GetMigrationData201901.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/Parsers","name":"Parsers","type":"dir","children":[{"path":"/ceidg-api/src/Parsers/BaseParser.php","name":"BaseParser.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Parsers/IdParser.php","name":"IdParser.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Parsers/MigrationDataParser.php","name":"MigrationDataParser.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/Validators","name":"Validators","type":"dir","children":[{"path":"/ceidg-api/src/Validators/BaseValidator.php","name":"BaseValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/EmptyValidator.php","name":"EmptyValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/NIPValidator.php","name":"NIPValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/NIP_SCValidator.php","name":"NIP_SCValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/PKDValidator.php","name":"PKDValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/PostcodeValidator.php","name":"PostcodeValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/REGONValidator.php","name":"REGONValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/REGON_SCValidator.php","name":"REGON_SCValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/StatusValidator.php","name":"StatusValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/CeidgApi.php","name":"CeidgApi.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/tests","name":"tests","type":"dir","children":[{"path":"/ceidg-api/tests/CeidgTest.php","name":"CeidgTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/.coveralls.yml","name":".coveralls.yml","type":"file","exclude":[{}],"stacks":{"language":"yaml","icon":"simple-icons:coveralls"}},{"path":"/ceidg-api/.php_cs.dist","name":".php_cs.dist","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/.styleci.yml","name":".styleci.yml","type":"file","exclude":[{}],"stacks":{"language":"YAML","icon":"logos:styleci"}},{"path":"/ceidg-api/.travis.yml","name":".travis.yml","type":"file","exclude":[{}],"stacks":{"language":"YAML","icon":"logos:travis-ci"}},{"path":"/ceidg-api/LICENSE","name":"LICENSE","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"bx:bxs-file-blank"}},{"path":"/ceidg-api/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"},"content":"[![Build Status](https://travis-ci.org/sigrundev/ceidg-api.svg?branch=master)](https://travis-ci.org/sigrundev/ceidg-api) [![Coverage Status](https://coveralls.io/repos/github/sigrundev/ceidg-api/badge.svg?branch=master)](https://coveralls.io/github/sigrundev/ceidg-api?branch=master)\n[![StyleCI](https://github.styleci.io/repos/203665408/shield?branch=master)](https://github.styleci.io/repos/203665408)\n[![Maintainability](https://api.codeclimate.com/v1/badges/e2e75fb45810272e7bf0/maintainability)](https://codeclimate.com/github/sigrundev/ceidg-api/maintainability)\n\n# PHP CEIDG API library\nWe proudly present a PHP library to connect with CEIDG (Polish registry on businesses) API, using SOAP protocol.\n\nOur library is capable of parsing querying result into well-formatted object or array of objects, validating inputted data (such as VAT number). Build atop the SOLID, DRY, and KISS principles, it provides a comprehensive tool to communicate with CEIDG API.\n\nPlease refer to the official API documentation, available at the CEIDG system website at https://datastore.ceidg.gov.pl (you should be logged in to view documentation files). Our library reflects their idea wholly.\n\n## Usage\n\n### Installation\n\nAs simple as it can be:\n```bash\ncomposer require sigrun/ceidg-api\n```\n\n### Declaring API client\n\nTo declare API client, create new client class, with authorization token and (optionally) sandbox flag as arguments:\n\n```php\nuse CeidgApi\\CeidgApi;\n\n$authToken = 'secret';\n\n// To connect with the production environment\n$ceidgProductionApi = new CeidgApi($authToken);\n\n// To connect with the sandbox environment\n$ceidgSandboxApi = new CeidgApi($authToken, true);\n```\n\n### Declaring requested function\n\nCEIDG API provides two SOAP functions - _GetId_ and _GetMigrationData201901_. The first returns only companies' unique IDs, whereas the second one - full data on the companies.\n\n```php\n$getId = $ceidgProductionApi->getId();\n\n$getMigrationData = $ceidgProductionApi->getMigrationData();\n// or\n$getMigrationData = $ceidgProductionApi->getMigrationData201901();\n```\n\n### Setting query parameters with a simple chain of responsibility pattern\n\nWe've implemented a simple chain of responsibility pattern, enabling easy setting up querying params.\n\n```php\n\n// To get IDs of all companies modified or created on August 5th, 2019\n$result = $getId->setMigrationDateFrom('2019-08-05')->setMigrationDateTo('2019-08-05')->send();\n\n// To get IDs of all companies having postcode '02-662'\n$result = $getId->setPostcode('02-662')->send();\n```\n\n### Parsing of response\n\nYou can demand on-the-fly parsing of the result. Depending on the number of retrieved entries, you will receive either a single object or an array of them. ```send()``` method has a ```$parse``` argument, default set to ```true```.\n\nAn example (abbreviated) of parsed response looks as following:\n\n```json\n{\n  \"IdentyfikatorWpisu\": \"ff83fff2fc2ab947f78fb6069f1767df\",\n  \"DanePodstawowe\": {\n    \"Imie\": \"Ryszard\",\n    \"Nazwisko\": \"Petru\",\n    \"NIP\": \"8991999655\",\n    \"REGON\": \"147022306\",\n    \"Firma\": \"Ryszard Petru Consulting\"\n  }\n}\n```\n### Single line of code\n\nYou can do everything mentioned above, within a single line of code:\n\n```php\n$result = (new CeidgApi($authToken))->getId()->setMigrationDateFrom('2019-08-05')->setMigrationDateTo('2019-08-05')->send();\n```\n\n### Available params\n\nAvailable query params are compliant with those described in the official API documentation. A 'UniqueId' param can be set using the 'setUniqueId' method, a 'NIP' param - using the 'setNIP' method, etc.\n\n### Removing param from query\n\nTo remove a param from query params array, you can call a method with 'null' as its only argument, like 'SetUniqueId(null)'. There's no difference between method names starting with a capital letter or not.\n\n#### GetMigrationData\n\n|       Param       | Query functions         |     Setter method    |                 Type                 | Has validator? |\n|:-----------------:|-------------------------|:--------------------:|:------------------------------------:|----------------|\n| DateTo            | GetId, GetMigrationData | SetDateTo            | String ('Y-m-d')                     | not yet        |\n| DateFrom          | GetId, GetMigrationData | SetDateFrom          | String ('Y-m-d')                     | not yet        |\n| MigrationDateTo   | GetId, GetMigrationData | SetMigrationDateTo   | String ('Y-m-d')                     | not yet        |\n| MigrationDateFrom | GetId, GetMigrationData | SetMigrationDateFrom | String ('Y-m-d')                     | not yet        |\n| UniqueId          | GetMigrationData        | SetUniqueId          | Array of strings                     | not yet        |\n| NIP               | GetMigrationData        | SetNIP               | Array of strings                     | yes            |\n| REGON             | GetMigrationData        | SetREGON             | Array of strings                     | yes            |\n| NIP_SC            | GetMigrationData        | SetNIP_SC            | Array of strings                     | yes            |\n| REGON_SC          | GetMigrationData        | SetREGON_SC          | Array of strings                     | yes            |\n| Name              | GetMigrationData        | SetName              | Array of strings                     | no             |\n| Province          | GetMigrationData        | SetProvince          | Array of strings                     | no             |\n| County            | GetMigrationData        | SetCounty            | Array of strings                     | no             |\n| Commune           | GetMigrationData        | SetCommune           | Array of strings                     | no             |\n| City              | GetMigrationData        | SetCity              | Array of strings                     | no             |\n| Street            | GetMigrationData        | SetStreet            | Array of strings                     | no             |\n| Postcode          | GetMigrationData        | SetPostcode          | Array of strings                     | yes            |\n| PKD               | GetMigrationData        | SetPKD               | Array of strings                     | yes            |\n| Status            | GetMigrationData        | SetStatus            | Array of integers within [1,2,3,4,9] | yes            |\n\nWhen a SOAP request envelope is sent, all previously set params are cleared.\n"},{"path":"/ceidg-api/composer.json","name":"composer.json","type":"file","exclude":[{}],"stacks":{"language":"json","icon":"logos:composer"}},{"path":"/ceidg-api/phpunit.xml.dist","name":"phpunit.xml.dist","type":"file","exclude":[{}],"stacks":{"language":"xml","icon":"mdi:xml"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta","name":"php-jotta","type":"dir","children":[{"path":"/php-jotta/src","name":"src","type":"dir","children":[{"path":"/php-jotta/src/Client","name":"Client","type":"dir","children":[{"path":"/php-jotta/src/Client/Contracts","name":"Contracts","type":"dir","children":[{"path":"/php-jotta/src/Client/Contracts/NamespaceContract.php","name":"NamespaceContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Contracts/ScopeContract.php","name":"ScopeContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Exceptions","name":"Exceptions","type":"dir","children":[{"path":"/php-jotta/src/Client/Exceptions/JottaException.php","name":"JottaException.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Responses","name":"Responses","type":"dir","children":[{"path":"/php-jotta/src/Client/Responses/Namespaces","name":"Namespaces","type":"dir","children":[{"path":"/php-jotta/src/Client/Responses/Namespaces/Attributes.php","name":"Attributes.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Device.php","name":"Device.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/File.php","name":"File.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Folder.php","name":"Folder.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Metadata.php","name":"Metadata.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/MountPoint.php","name":"MountPoint.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Revision.php","name":"Revision.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/User.php","name":"User.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Responses/ElementMapper.php","name":"ElementMapper.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/ResponseNamespace.php","name":"ResponseNamespace.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/XmlResponseSerializer.php","name":"XmlResponseSerializer.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Scopes","name":"Scopes","type":"dir","children":[{"path":"/php-jotta/src/Client/Scopes/AccountScope.php","name":"AccountScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/DeviceScope.php","name":"DeviceScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/DirectoryScope.php","name":"DirectoryScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/FileScope.php","name":"FileScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/Scope.php","name":"Scope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Support","name":"Support","type":"dir","children":[{"path":"/php-jotta/src/Support/JFileInfo.php","name":"JFileInfo.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Support/OperationReport.php","name":"OperationReport.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Traits","name":"Traits","type":"dir","children":[{"path":"/php-jotta/src/Traits/DirectoryConfigTrait.php","name":"DirectoryConfigTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Traits/PathTrait.php","name":"PathTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Traits/ScopeConfigTrait.php","name":"ScopeConfigTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Jotta.php","name":"Jotta.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/JottaAdapter.php","name":"JottaAdapter.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/JottaClient.php","name":"JottaClient.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests","name":"tests","type":"dir","children":[{"path":"/php-jotta/tests/Mock","name":"Mock","type":"dir","children":[{"path":"/php-jotta/tests/Mock/JottaApiV1Mock.php","name":"JottaApiV1Mock.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Mock/ResponseBodyMock.php","name":"ResponseBodyMock.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Support","name":"Support","type":"dir","children":[{"path":"/php-jotta/tests/Support/AssertExceptions.php","name":"AssertExceptions.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Support/DirectoryScopeExtended.php","name":"DirectoryScopeExtended.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Support/JottaTestTrait.php","name":"JottaTestTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Unit","name":"Unit","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_001_Architecture","name":"_001_Architecture","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_001_Architecture/Test001_ArchitectureTest.php","name":"Test001_ArchitectureTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_001_Architecture/Test003_XmlSerializerTest.php","name":"Test003_XmlSerializerTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_001_Architecture/Test005_XmlNamespacesTest.php","name":"Test005_XmlNamespacesTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_001_Architecture/Test006_UploadReportTest.php","name":"Test006_UploadReportTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Unit/_003_Scopes","name":"_003_Scopes","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_003_Scopes/Test001_AccountTest.php","name":"Test001_AccountTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test003_DeviceTest.php","name":"Test003_DeviceTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test011_DirectoryTest.php","name":"Test011_DirectoryTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test013_FileTest.php","name":"Test013_FileTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test013a_FileDownloadTest.php","name":"Test013a_FileDownloadTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test013b_FileUploadTest.php","name":"Test013b_FileUploadTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test015b_FolderRecursiveUploadTest.php","name":"Test015b_FolderRecursiveUploadTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Unit/_005_Exceptions","name":"_005_Exceptions","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_005_Exceptions/Test001_ExceptionsTest.php","name":"Test001_ExceptionsTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/coverage","name":"coverage","type":"dir","children":[],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/temp","name":"temp","type":"dir","children":[],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/JottaTestCase.php","name":"JottaTestCase.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/.coveralls.yml","name":".coveralls.yml","type":"file","exclude":[{}],"stacks":{"language":"yaml","icon":"simple-icons:coveralls"}},{"path":"/php-jotta/.travis.yml","name":".travis.yml","type":"file","exclude":[{}],"stacks":{"language":"YAML","icon":"logos:travis-ci"}},{"path":"/php-jotta/CODE_OF_CONDUCT.md","name":"CODE_OF_CONDUCT.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/php-jotta/LICENSE.md","name":"LICENSE.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/php-jotta/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/php-jotta/composer.json","name":"composer.json","type":"file","exclude":[{}],"stacks":{"language":"json","icon":"logos:composer"}},{"path":"/php-jotta/phpunit.xml.dist","name":"phpunit.xml.dist","type":"file","exclude":[{}],"stacks":{"language":"xml","icon":"mdi:xml"}}],"exclude":[{}],"yaml":{}},{"path":"/varia","name":"varia","type":"dir","children":[{"path":"/varia/js","name":"js","type":"dir","children":[{"path":"/varia/js/three.js","name":"three.js","type":"file","exclude":[{}],"stacks":{"language":"javascript","icon":"logos:javascript"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/SOME.md","name":"SOME.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}}],"exclude":[{}],"yaml":{}},"pathNode":{"path":"/ceidg-api/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"},"content":"[![Build Status](https://travis-ci.org/sigrundev/ceidg-api.svg?branch=master)](https://travis-ci.org/sigrundev/ceidg-api) [![Coverage Status](https://coveralls.io/repos/github/sigrundev/ceidg-api/badge.svg?branch=master)](https://coveralls.io/github/sigrundev/ceidg-api?branch=master)\n[![StyleCI](https://github.styleci.io/repos/203665408/shield?branch=master)](https://github.styleci.io/repos/203665408)\n[![Maintainability](https://api.codeclimate.com/v1/badges/e2e75fb45810272e7bf0/maintainability)](https://codeclimate.com/github/sigrundev/ceidg-api/maintainability)\n\n# PHP CEIDG API library\nWe proudly present a PHP library to connect with CEIDG (Polish registry on businesses) API, using SOAP protocol.\n\nOur library is capable of parsing querying result into well-formatted object or array of objects, validating inputted data (such as VAT number). Build atop the SOLID, DRY, and KISS principles, it provides a comprehensive tool to communicate with CEIDG API.\n\nPlease refer to the official API documentation, available at the CEIDG system website at https://datastore.ceidg.gov.pl (you should be logged in to view documentation files). Our library reflects their idea wholly.\n\n## Usage\n\n### Installation\n\nAs simple as it can be:\n```bash\ncomposer require sigrun/ceidg-api\n```\n\n### Declaring API client\n\nTo declare API client, create new client class, with authorization token and (optionally) sandbox flag as arguments:\n\n```php\nuse CeidgApi\\CeidgApi;\n\n$authToken = 'secret';\n\n// To connect with the production environment\n$ceidgProductionApi = new CeidgApi($authToken);\n\n// To connect with the sandbox environment\n$ceidgSandboxApi = new CeidgApi($authToken, true);\n```\n\n### Declaring requested function\n\nCEIDG API provides two SOAP functions - _GetId_ and _GetMigrationData201901_. The first returns only companies' unique IDs, whereas the second one - full data on the companies.\n\n```php\n$getId = $ceidgProductionApi->getId();\n\n$getMigrationData = $ceidgProductionApi->getMigrationData();\n// or\n$getMigrationData = $ceidgProductionApi->getMigrationData201901();\n```\n\n### Setting query parameters with a simple chain of responsibility pattern\n\nWe've implemented a simple chain of responsibility pattern, enabling easy setting up querying params.\n\n```php\n\n// To get IDs of all companies modified or created on August 5th, 2019\n$result = $getId->setMigrationDateFrom('2019-08-05')->setMigrationDateTo('2019-08-05')->send();\n\n// To get IDs of all companies having postcode '02-662'\n$result = $getId->setPostcode('02-662')->send();\n```\n\n### Parsing of response\n\nYou can demand on-the-fly parsing of the result. Depending on the number of retrieved entries, you will receive either a single object or an array of them. ```send()``` method has a ```$parse``` argument, default set to ```true```.\n\nAn example (abbreviated) of parsed response looks as following:\n\n```json\n{\n  \"IdentyfikatorWpisu\": \"ff83fff2fc2ab947f78fb6069f1767df\",\n  \"DanePodstawowe\": {\n    \"Imie\": \"Ryszard\",\n    \"Nazwisko\": \"Petru\",\n    \"NIP\": \"8991999655\",\n    \"REGON\": \"147022306\",\n    \"Firma\": \"Ryszard Petru Consulting\"\n  }\n}\n```\n### Single line of code\n\nYou can do everything mentioned above, within a single line of code:\n\n```php\n$result = (new CeidgApi($authToken))->getId()->setMigrationDateFrom('2019-08-05')->setMigrationDateTo('2019-08-05')->send();\n```\n\n### Available params\n\nAvailable query params are compliant with those described in the official API documentation. A 'UniqueId' param can be set using the 'setUniqueId' method, a 'NIP' param - using the 'setNIP' method, etc.\n\n### Removing param from query\n\nTo remove a param from query params array, you can call a method with 'null' as its only argument, like 'SetUniqueId(null)'. There's no difference between method names starting with a capital letter or not.\n\n#### GetMigrationData\n\n|       Param       | Query functions         |     Setter method    |                 Type                 | Has validator? |\n|:-----------------:|-------------------------|:--------------------:|:------------------------------------:|----------------|\n| DateTo            | GetId, GetMigrationData | SetDateTo            | String ('Y-m-d')                     | not yet        |\n| DateFrom          | GetId, GetMigrationData | SetDateFrom          | String ('Y-m-d')                     | not yet        |\n| MigrationDateTo   | GetId, GetMigrationData | SetMigrationDateTo   | String ('Y-m-d')                     | not yet        |\n| MigrationDateFrom | GetId, GetMigrationData | SetMigrationDateFrom | String ('Y-m-d')                     | not yet        |\n| UniqueId          | GetMigrationData        | SetUniqueId          | Array of strings                     | not yet        |\n| NIP               | GetMigrationData        | SetNIP               | Array of strings                     | yes            |\n| REGON             | GetMigrationData        | SetREGON             | Array of strings                     | yes            |\n| NIP_SC            | GetMigrationData        | SetNIP_SC            | Array of strings                     | yes            |\n| REGON_SC          | GetMigrationData        | SetREGON_SC          | Array of strings                     | yes            |\n| Name              | GetMigrationData        | SetName              | Array of strings                     | no             |\n| Province          | GetMigrationData        | SetProvince          | Array of strings                     | no             |\n| County            | GetMigrationData        | SetCounty            | Array of strings                     | no             |\n| Commune           | GetMigrationData        | SetCommune           | Array of strings                     | no             |\n| City              | GetMigrationData        | SetCity              | Array of strings                     | no             |\n| Street            | GetMigrationData        | SetStreet            | Array of strings                     | no             |\n| Postcode          | GetMigrationData        | SetPostcode          | Array of strings                     | yes            |\n| PKD               | GetMigrationData        | SetPKD               | Array of strings                     | yes            |\n| Status            | GetMigrationData        | SetStatus            | Array of integers within [1,2,3,4,9] | yes            |\n\nWhen a SOAP request envelope is sent, all previously set params are cleared.\n"},"pathMatch":"ceidg-api/README__md"}