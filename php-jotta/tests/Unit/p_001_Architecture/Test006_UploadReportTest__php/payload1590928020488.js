window.__NUXT__=function(e,t,a,p,n,o,s,c,i,r,l,d,h,u,g,m,y,x,_,k,v,$,f,R,j,C,T,S,E,V,I,F,J,A,N){return x.path="/",x.name="repository",x.type=p,x.children=[{path:"/ceidg-api",name:"ceidg-api",type:p,children:[{path:"/ceidg-api/src",name:l,type:p,children:[{path:"/ceidg-api/src/Contracts",name:_,type:p,children:[{path:"/ceidg-api/src/Contracts/CeidgApiContract.php",name:"CeidgApiContract.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Contracts/CeidgEnvelopeContract.php",name:"CeidgEnvelopeContract.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Contracts/ValidatorContract.php",name:"ValidatorContract.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Contracts/XmlParserContract.php",name:"XmlParserContract.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/Envelopes",name:"Envelopes",type:p,children:[{path:"/ceidg-api/src/Envelopes/CeidgEnvelope.php",name:"CeidgEnvelope.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Envelopes/GetId.php",name:"GetId.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Envelopes/GetMigrationData.php",name:"GetMigrationData.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Envelopes/GetMigrationData201901.php",name:"GetMigrationData201901.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/Parsers",name:"Parsers",type:p,children:[{path:"/ceidg-api/src/Parsers/BaseParser.php",name:"BaseParser.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Parsers/IdParser.php",name:"IdParser.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Parsers/MigrationDataParser.php",name:"MigrationDataParser.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/Validators",name:"Validators",type:p,children:[{path:"/ceidg-api/src/Validators/BaseValidator.php",name:"BaseValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/EmptyValidator.php",name:"EmptyValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/NIPValidator.php",name:"NIPValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/NIP_SCValidator.php",name:"NIP_SCValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/PKDValidator.php",name:"PKDValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/PostcodeValidator.php",name:"PostcodeValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/REGONValidator.php",name:"REGONValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/REGON_SCValidator.php",name:"REGON_SCValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/src/Validators/StatusValidator.php",name:"StatusValidator.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/CeidgApi.php",name:"CeidgApi.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/tests",name:k,type:p,children:[{path:"/ceidg-api/tests/CeidgTest.php",name:"CeidgTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/.coveralls.yml",name:v,type:e,exclude:[{}],stacks:{language:u,icon:$}},{path:"/ceidg-api/.php_cs.dist",name:".php_cs.dist",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/ceidg-api/.styleci.yml",name:".styleci.yml",type:e,exclude:[{}],stacks:{language:g,icon:"logos:styleci"}},{path:"/ceidg-api/.travis.yml",name:f,type:e,exclude:[{}],stacks:{language:g,icon:R}},{path:"/ceidg-api/LICENSE",name:"LICENSE",type:e,exclude:[{}],stacks:{language:n,icon:"bx:bxs-file-blank"}},{path:"/ceidg-api/README.md",name:m,type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/ceidg-api/composer.json",name:d,type:e,exclude:[{}],stacks:{language:i,icon:h}},{path:"/ceidg-api/phpunit.xml.dist",name:j,type:e,exclude:[{}],stacks:{language:"xml",icon:C}}],exclude:[{}],yaml:{}},{path:"/fivem",name:"fivem",type:p,children:[{path:"/fivem/src",name:l,type:p,children:[{path:"/fivem/src/FiveM.php",name:"FiveM.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/fivem/src/FiveMFacade.php",name:"FiveMFacade.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/fivem/src/FiveMServiceProvider.php",name:"FiveMServiceProvider.php",type:e,exclude:[{}],stacks:{language:t,icon:y}}],exclude:[{}],yaml:{}},{path:"/fivem/composer.json",name:d,type:e,exclude:[{}],stacks:{language:i,icon:h}}],exclude:[{}],yaml:{}},{path:"/mighty-text",name:"mighty-text",type:p,children:[{path:"/mighty-text/config",name:"config",type:p,children:[{path:"/mighty-text/config/mightytext.php",name:"mightytext.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/mighty-text/src",name:l,type:p,children:[{path:"/mighty-text/src/Commands",name:"Commands",type:p,children:[{path:"/mighty-text/src/Commands/MightyTextSend.php",name:"MightyTextSend.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/mighty-text/src/MightyText.php",name:"MightyText.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/mighty-text/src/MightyTextServiceProvider.php",name:"MightyTextServiceProvider.php",type:e,exclude:[{}],stacks:{language:t,icon:y}}],exclude:[{}],yaml:{}},{path:"/mighty-text/composer.json",name:d,type:e,exclude:[{}],stacks:{language:i,icon:h}}],exclude:[{}],yaml:{}},{path:"/php-jotta",name:"php-jotta",type:p,children:[{path:"/php-jotta/docs",name:"docs",type:p,children:[{path:"/php-jotta/docs/003_Getting_started",name:"003_Getting_started",type:p,children:[{path:"/php-jotta/docs/003_Getting_started/001_Quickstart.md",name:"001_Quickstart.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/003_Getting_started/003_Installation.md",name:"003_Installation.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/003_Getting_started/007_Jottacloud_username.md",name:"007_Jottacloud_username.md",type:e,exclude:[{}],stacks:{language:n,icon:o}}],exclude:[{}],yaml:{}},{path:"/php-jotta/docs/004_Usage",name:"004_Usage",type:p,children:[{path:"/php-jotta/docs/004_Usage/003_API_operations",name:"003_API_operations",type:p,children:[{path:"/php-jotta/docs/004_Usage/003_API_operations/003_Introduction.md",name:"003_Introduction.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/004_Usage/003_API_operations/005_Account.md",name:"005_Account.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/004_Usage/003_API_operations/007_Device.md",name:"007_Device.md",type:e,exclude:[{}],stacks:{language:n,icon:o}}],exclude:[{}],yaml:{}},{path:"/php-jotta/docs/004_Usage/000_Overview.md",name:"000_Overview.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/004_Usage/005_Configuration.md",name:"005_Configuration.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/004_Usage/007_Constants.md",name:"007_Constants.md",type:e,exclude:[{}],stacks:{language:n,icon:o}}],exclude:[{}],yaml:{}},{path:"/php-jotta/docs/006_Contributions",name:"006_Contributions",type:p,children:[{path:"/php-jotta/docs/006_Contributions/000_Contributions.md",name:"000_Contributions.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/006_Contributions/001_Testing.md",name:"001_Testing.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/006_Contributions/002_Security.md",name:"002_Security.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/006_Contributions/999_Coverage.md",name:"999_Coverage.md",type:e,exclude:[{}],stacks:{language:n,icon:o}}],exclude:[{}],yaml:{}},{path:"/php-jotta/docs/000_index.md",name:"000_index.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/001_Introduction.md",name:"001_Introduction.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/002_Features.md",name:"002_Features.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/007_Changelog.md",name:"007_Changelog.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/008_About_us.md",name:"008_About_us.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/docs/config.json",name:"config.json",type:e,exclude:[{}],stacks:{language:i,icon:"mdi:code-json"}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src",name:l,type:p,children:[{path:"/php-jotta/src/Client",name:"Client",type:p,children:[{path:"/php-jotta/src/Client/Contracts",name:_,type:p,children:[{path:"/php-jotta/src/Client/Contracts/NamespaceContract.php",name:"NamespaceContract.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Contracts/ScopeContract.php",name:"ScopeContract.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Exceptions",name:"Exceptions",type:p,children:[{path:"/php-jotta/src/Client/Exceptions/JottaException.php",name:"JottaException.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Responses",name:"Responses",type:p,children:[{path:"/php-jotta/src/Client/Responses/Namespaces",name:"Namespaces",type:p,children:[{path:"/php-jotta/src/Client/Responses/Namespaces/Attributes.php",name:"Attributes.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/Device.php",name:"Device.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/File.php",name:"File.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/Folder.php",name:"Folder.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/Metadata.php",name:"Metadata.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/MountPoint.php",name:"MountPoint.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/Revision.php",name:"Revision.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/Namespaces/User.php",name:"User.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Responses/ElementMapper.php",name:"ElementMapper.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/ResponseNamespace.php",name:"ResponseNamespace.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Responses/XmlResponseSerializer.php",name:"XmlResponseSerializer.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Scopes",name:"Scopes",type:p,children:[{path:"/php-jotta/src/Client/Scopes/AccountScope.php",name:"AccountScope.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Scopes/DeviceScope.php",name:"DeviceScope.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Scopes/DirectoryScope.php",name:"DirectoryScope.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Scopes/FileScope.php",name:"FileScope.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Client/Scopes/Scope.php",name:"Scope.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Support",name:T,type:p,children:[{path:"/php-jotta/src/Support/JFileInfo.php",name:"JFileInfo.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Support/OperationReport.php",name:"OperationReport.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Traits",name:"Traits",type:p,children:[{path:"/php-jotta/src/Traits/DirectoryConfigTrait.php",name:"DirectoryConfigTrait.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Traits/PathTrait.php",name:"PathTrait.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/Traits/ScopeConfigTrait.php",name:"ScopeConfigTrait.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Jotta.php",name:"Jotta.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/JottaAdapter.php",name:"JottaAdapter.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/src/JottaClient.php",name:"JottaClient.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests",name:k,type:p,children:[{path:"/php-jotta/tests/Mock",name:"Mock",type:p,children:[{path:"/php-jotta/tests/Mock/JottaApiV1Mock.php",name:"JottaApiV1Mock.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Mock/ResponseBodyMock.php",name:"ResponseBodyMock.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Support",name:T,type:p,children:[{path:"/php-jotta/tests/Support/AssertExceptions.php",name:"AssertExceptions.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Support/DirectoryScopeExtended.php",name:"DirectoryScopeExtended.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Support/JottaTestTrait.php",name:"JottaTestTrait.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Unit",name:"Unit",type:p,children:[{path:"/php-jotta/tests/Unit/_001_Architecture",name:"_001_Architecture",type:p,children:[{path:"/php-jotta/tests/Unit/_001_Architecture/Test001_ArchitectureTest.php",name:"Test001_ArchitectureTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_001_Architecture/Test003_XmlSerializerTest.php",name:"Test003_XmlSerializerTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_001_Architecture/Test005_XmlNamespacesTest.php",name:"Test005_XmlNamespacesTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:S,name:E,type:e,exclude:[{}],stacks:{language:t,icon:a},content:V}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Unit/_003_Scopes",name:"_003_Scopes",type:p,children:[{path:"/php-jotta/tests/Unit/_003_Scopes/Test001_AccountTest.php",name:"Test001_AccountTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test003_DeviceTest.php",name:"Test003_DeviceTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test011_DirectoryTest.php",name:"Test011_DirectoryTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test013_FileTest.php",name:"Test013_FileTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test013a_FileDownloadTest.php",name:"Test013a_FileDownloadTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test013b_FileUploadTest.php",name:"Test013b_FileUploadTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test015b_FolderRecursiveUploadTest.php",name:"Test015b_FolderRecursiveUploadTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Unit/_005_Exceptions",name:"_005_Exceptions",type:p,children:[{path:"/php-jotta/tests/Unit/_005_Exceptions/Test001_ExceptionsTest.php",name:"Test001_ExceptionsTest.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/coverage",name:"coverage",type:p,children:[],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/temp",name:"temp",type:p,children:[],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/JottaTestCase.php",name:"JottaTestCase.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}},{path:"/php-jotta/.coveralls.yml",name:v,type:e,exclude:[{}],stacks:{language:u,icon:$}},{path:"/php-jotta/.travis.yml",name:f,type:e,exclude:[{}],stacks:{language:g,icon:R}},{path:"/php-jotta/CODE_OF_CONDUCT.md",name:"CODE_OF_CONDUCT.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/LICENSE.md",name:"LICENSE.md",type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/README.md",name:m,type:e,exclude:[{}],stacks:{language:n,icon:o}},{path:"/php-jotta/composer.json",name:d,type:e,exclude:[{}],stacks:{language:i,icon:h}},{path:"/php-jotta/phpunit.xml.dist",name:j,type:e,exclude:[{}],stacks:{language:"xml",icon:C}}],exclude:[{}],yaml:{}},{path:"/sightengine",name:"sightengine",type:p,children:[{path:"/sightengine/src",name:l,type:p,children:[{path:"/sightengine/src/Check.php",name:"Check.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/sightengine/src/SightengineClient.php",name:"SightengineClient.php",type:e,exclude:[{}],stacks:{language:t,icon:a}},{path:"/sightengine/src/SightengineServiceProvider.php",name:"SightengineServiceProvider.php",type:e,exclude:[{}],stacks:{language:t,icon:y}}],exclude:[{}],yaml:{}},{path:"/sightengine/composer.json",name:d,type:e,exclude:[{}],stacks:{language:i,icon:h}}],exclude:[{}],yaml:{}},{path:"/varia",name:"varia",type:p,children:[{path:"/varia/bash",name:"bash",type:p,children:[{path:"/varia/bash/my-portfolio",name:"my-portfolio",type:p,children:[{path:"/varia/bash/my-portfolio/up.sh",name:"up.sh",type:e,exclude:[{}],stacks:{language:"shell",icon:"simple-icons:gnubash"}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/docker",name:"docker",type:p,children:[{path:"/varia/docker/ffmpeg",name:"ffmpeg",type:p,children:[{path:"/varia/docker/ffmpeg/Dockerfile",name:"Dockerfile",type:e,exclude:[{}],stacks:{language:"dockerfile",icon:I}}],exclude:[{}],yaml:{}},{path:"/varia/docker/nginx-proxy-letsencrypt",name:"nginx-proxy-letsencrypt",type:p,children:[{path:"/varia/docker/nginx-proxy-letsencrypt/docker-compose.yml",name:"docker-compose.yml",type:e,exclude:[{}],stacks:{language:u,icon:I}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/js",name:"js",type:p,children:[{path:"/varia/js/threejs-playground",name:"threejs-playground",type:p,children:[{path:"/varia/js/threejs-playground/three.js",name:"three.js",type:e,exclude:[{}],stacks:{language:F,icon:J}}],exclude:[{}],yaml:{}},{path:"/varia/js/tpay-notification",name:"tpay-notification",type:p,children:[{path:"/varia/js/tpay-notification/tnotification.js",name:"tnotification.js",type:e,exclude:[{}],stacks:{language:F,icon:J}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/php",name:t,type:p,children:[{path:"/varia/php/european-bank-calculation",name:"european-bank-calculation",type:p,children:[{path:"/varia/php/european-bank-calculation/EuropeanBankProvider.php",name:"EuropeanBankProvider.php",type:e,exclude:[{}],stacks:{language:t,icon:a}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/vue",name:s,type:p,children:[{path:"/varia/vue/calendar",name:"calendar",type:p,children:[{path:"/varia/vue/calendar/event-list",name:"event-list",type:p,children:[{path:"/varia/vue/calendar/event-list/EventListItem.vue",name:"EventListItem.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}}],exclude:[{}],yaml:{}},{path:"/varia/vue/calendar/EventContent.vue",name:"EventContent.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}},{path:"/varia/vue/calendar/EventList.vue",name:"EventList.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}},{path:"/varia/vue/calendar/MonthStrips.vue",name:"MonthStrips.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}},{path:"/varia/vue/calendar/RomanMonths.vue",name:"RomanMonths.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}},{path:"/varia/vue/calendar/Timeline.vue",name:"Timeline.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}},{path:"/varia/vue/calendar/YearEvents.vue",name:"YearEvents.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}}],exclude:[{}],yaml:{}},{path:"/varia/vue/directory-tree",name:"directory-tree",type:p,children:[{path:"/varia/vue/directory-tree/tree",name:"tree",type:p,children:[{path:"/varia/vue/directory-tree/tree/node",name:"node",type:p,children:[{path:"/varia/vue/directory-tree/tree/node/TreeNodeExpander.vue",name:"TreeNodeExpander.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}},{path:"/varia/vue/directory-tree/tree/node/TreeNodeName.vue",name:"TreeNodeName.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}}],exclude:[{}],yaml:{}},{path:"/varia/vue/directory-tree/tree/TreeNode.vue",name:"TreeNode.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/vue/piechart",name:"piechart",type:p,children:[{path:"/varia/vue/piechart/PieChart.vue",name:"PieChart.vue",type:e,exclude:[{}],stacks:{language:s,icon:c}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/README.md",name:m,type:e,exclude:[{}],stacks:{language:n,icon:o}}],x.exclude=[{}],x.yaml={},A.path=S,A.name=E,A.type=e,A.exclude=[{}],A.stacks={language:t,icon:a},A.content=V,{layout:"default",data:[{tree:x,pathNode:A,pathMatch:N}],fetch:[],error:r,state:{auth:{token:r,visitor:r,word:r},layout:{loading:{icon:r,name:r},tree:!0},stacks:{stacks:{php:{hex:"#ff0000",icon:{show:!0,name:t}}}},tree:{path:{active:"",expanded:[""]},tree:x,pathMatch:N,pathNode:A}},serverRendered:!0,routePath:"/php-jotta/tests/Unit/p_001_Architecture/Test006_UploadReportTest__php"}}("file","php","logos:php","dir","markdown","ri:markdown-fill","vue","logos:vue","json",null,"src","composer.json","logos:composer","yaml","YAML","README.md","logos:laravel",{},"Contracts","tests",".coveralls.yml","simple-icons:coveralls",".travis.yml","logos:travis-ci","phpunit.xml.dist","mdi:xml","Support","/php-jotta/tests/Unit/_001_Architecture/Test006_UploadReportTest.php","Test006_UploadReportTest.php","<?php\n\nnamespace Vegfund\\Jotta\\Tests\\Unit\\_001_Architecture;\n\nuse Illuminate\\Support\\Str;\nuse Vegfund\\Jotta\\Jotta;\nuse Vegfund\\Jotta\\Support\\JFileInfo;\nuse Vegfund\\Jotta\\Support\\OperationReport;\nuse Vegfund\\Jotta\\Tests\\JottaTestCase;\n\nclass Test006_UploadReportTest extends JottaTestCase\n{\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::__construct\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::stop\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::getReport\n     */\n    public function test001_upload_report_time()\n    {\n        $report = new OperationReport();\n\n        $reflection = new \\ReflectionClass($report);\n        $property = $reflection->getProperty('start');\n        $property->setAccessible(true);\n\n        $this->assertTrue($property->getValue($report) < microtime(true));\n\n        sleep(2);\n        $report->stop();\n\n        $report = $report->getReport();\n\n        $this->assertIsArray($report);\n        $this->assertIsFloat($report['duration']);\n        $this->assertTrue($report['duration'] > 1 && $report['duration'] < 3);\n    }\n\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::folderTroublesome\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::fileNoFolder\n     * @covers  \\Vegfund\\Jotta\\Support\\OperationReport::stop\n     */\n    public function test003_upload_report_folders_troublesome()\n    {\n        $folders = [\n            'folder1' => [\n                'file1' => [\n                    'path' => 'path/folder1/file1',\n                    'size' => 2000,\n                ],\n                'file2' => [\n                    'path' => 'path/folder1/file2',\n                    'size' => 3000,\n                ],\n            ],\n        ];\n\n        $uploadReport = new OperationReport();\n\n        foreach ($folders as $path => $folder) {\n            $files = array_map(function ($item) {\n                $mock = \\Mockery::mock(JFileInfo::class);\n                $mock->shouldReceive('getSize')->andReturn($item['size']);\n                $mock->shouldReceive('getRealPath')->andReturn($item['path']);\n\n                return $mock;\n            }, $folder);\n\n            $uploadReport->folderTroublesome($path, $files);\n        }\n\n        $uploadReport->stop();\n        $report = $uploadReport->getReport();\n\n        $this->assertIsArray($report['folders']['troublesome']);\n        $this->assertCount(1, $report['folders']['troublesome']);\n\n        $this->assertIsArray($report['files']['no_folder']);\n        $this->assertCount(2, $report['files']['no_folder']);\n\n        $this->assertSame(5000, $report['sizes']['no_folder']);\n    }\n\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::folderCreated\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::folderExisting\n     */\n    public function test003_upload_report_folders_by_types()\n    {\n        $folders = [\n            'path/folder1' => 'existing',\n            'path/folder2' => 'existing',\n            'path/folder3' => 'existing',\n            'path/folder4' => 'created',\n            'path/folder5' => 'created',\n        ];\n\n        $uploadReport = new OperationReport();\n\n        foreach ($folders as $path => $type) {\n            $funcName = 'folder'.ucfirst($type);\n            $uploadReport->{$funcName}($path);\n        }\n\n        $uploadReport->stop();\n        $report = $uploadReport->getReport();\n\n        $this->assertCount(3, $report['folders']['existing']);\n        $this->assertCount(2, $report['folders']['created']);\n    }\n\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::file\n     */\n    public function test005_upload_report_files_overwrite()\n    {\n        $overwriteTypes = [\n            Jotta::FILE_OVERWRITE_IF_NEWER_OR_DIFFERENT => 'uploaded_newer_or_different',\n            Jotta::FILE_OVERWRITE_IF_NEWER              => 'uploaded_newer',\n            Jotta::FILE_OVERWRITE_IF_DIFFERENT          => 'uploaded_different',\n            Jotta::FILE_OVERWRITE_NEVER                 => 'ignored',\n            Jotta::FILE_OVERWRITE_ALWAYS                => 'uploaded_forcibly',\n        ];\n\n        $overwriteTypesKeys = array_keys($overwriteTypes);\n\n        $generatedFiles = [];\n\n        $uploadReport = new OperationReport();\n\n        $expectedSizes = [\n            'uploaded_newer_or_different' => 0,\n            'uploaded_newer'              => 0,\n            'uploaded_different'          => 0,\n            'ignored'                     => 0,\n            'uploaded_forcibly'           => 0,\n        ];\n\n        for ($i = 0; $i < 80; $i++) {\n            $mock = \\Mockery::mock(JFileInfo::class);\n            $size = rand(1, 999999);\n            $path = 'path/to/'.Str::random(12).'txt';\n            $mock->shouldReceive('getSize')->andReturn($size);\n            $mock->shouldReceive('getRealPath')->andReturn($path);\n\n            $overwriteType = $overwriteTypesKeys[array_rand($overwriteTypesKeys)];\n\n            $generatedFiles[] = [\n                'mock'           => $mock,\n                'size'           => $size,\n                'path'           => $path,\n                'overwrite_type' => $overwriteTypes[$overwriteType],\n            ];\n\n            $expectedSizes[$overwriteTypes[$overwriteType]] += $size;\n\n            $uploadReport->file(true, $mock, $overwriteType);\n        }\n\n        $uploadReport->stop();\n        $report = $uploadReport->getReport();\n\n        foreach ($expectedSizes as $scope => $size) {\n            $this->assertSame($size, $report['sizes'][$scope]);\n        }\n    }\n\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::fileFresh\n     */\n    public function test007_upload_files_fresh()\n    {\n        $expectedSize = 0;\n        $expectedCount = rand(50, 100);\n\n        $uploadReport = new OperationReport();\n\n        for ($i = 0; $i < $expectedCount; $i++) {\n            $mock = \\Mockery::mock(JFileInfo::class);\n            $size = rand(1, 999999);\n            $path = 'path/to/'.Str::random(12).'txt';\n            $mock->shouldReceive('getSize')->andReturn($size);\n            $mock->shouldReceive('getRealPath')->andReturn($path);\n\n            $expectedSize += $size;\n\n            $uploadReport->fileFresh($mock);\n        }\n\n        $uploadReport->stop();\n        $report = $uploadReport->getReport();\n\n        $this->assertSame($expectedCount, count($report['files']['uploaded_fresh']));\n        $this->assertSame($expectedSize, $report['sizes']['uploaded_fresh']);\n    }\n\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::file\n     */\n    public function test007a_upload_files_fresh_variant()\n    {\n        $expectedSize = 0;\n        $expectedCount = rand(50, 100);\n\n        $uploadReport = new OperationReport();\n\n        for ($i = 0; $i < $expectedCount; $i++) {\n            $mock = \\Mockery::mock(JFileInfo::class);\n            $size = rand(1, 999999);\n            $path = 'path/to/'.Str::random(12).'txt';\n            $mock->shouldReceive('getSize')->andReturn($size);\n            $mock->shouldReceive('getRealPath')->andReturn($path);\n\n            $expectedSize += $size;\n\n            $uploadReport->file(false, $mock, Jotta::FILE_OVERWRITE_ALWAYS);\n        }\n\n        $uploadReport->stop();\n        $report = $uploadReport->getReport();\n\n        $this->assertSame($expectedCount, count($report['files']['uploaded_fresh']));\n        $this->assertSame($expectedSize, $report['sizes']['uploaded_fresh']);\n    }\n\n    /**\n     * @covers \\Vegfund\\Jotta\\Support\\OperationReport::fileTroublesome\n     */\n    public function test007_upload_files_troublesome()\n    {\n        $expectedSize = 0;\n        $expectedCount = rand(50, 100);\n\n        $uploadReport = new OperationReport();\n\n        for ($i = 0; $i < $expectedCount; $i++) {\n            $mock = \\Mockery::mock(JFileInfo::class);\n            $size = rand(1, 999999);\n            $path = 'path/to/'.Str::random(12).'txt';\n            $mock->shouldReceive('getSize')->andReturn($size);\n            $mock->shouldReceive('getRealPath')->andReturn($path);\n\n            $expectedSize += $size;\n\n            $uploadReport->fileTroublesome($mock);\n        }\n\n        $uploadReport->stop();\n        $report = $uploadReport->getReport();\n\n        $this->assertSame($expectedCount, count($report['files']['troublesome']));\n        $this->assertSame($expectedSize, $report['sizes']['troublesome']);\n    }\n}\n","logos:docker-icon","javascript","logos:javascript",{},"php-jotta/tests/Unit/p_001_Architecture/Test006_UploadReportTest__php")