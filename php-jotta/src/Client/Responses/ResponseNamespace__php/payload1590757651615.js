window.__NUXT__=function(e,a,t,n,p,s,c,i,l,r,o,h,u,d,m,g,y,x,v,$,k,f,j,C,_,T,E,b,S,V,N,R,A){return u.path="/",u.name="repository",u.type=n,u.children=[{path:"/ceidg-api",name:"ceidg-api",type:n,children:[{path:"/ceidg-api/src",name:"src",type:n,children:[{path:"/ceidg-api/src/Contracts",name:d,type:n,children:[{path:"/ceidg-api/src/Contracts/CeidgApiContract.php",name:"CeidgApiContract.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Contracts/CeidgEnvelopeContract.php",name:"CeidgEnvelopeContract.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Contracts/ValidatorContract.php",name:"ValidatorContract.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Contracts/XmlParserContract.php",name:"XmlParserContract.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/Envelopes",name:"Envelopes",type:n,children:[{path:"/ceidg-api/src/Envelopes/CeidgEnvelope.php",name:"CeidgEnvelope.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Envelopes/GetId.php",name:"GetId.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Envelopes/GetMigrationData.php",name:"GetMigrationData.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Envelopes/GetMigrationData201901.php",name:"GetMigrationData201901.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/Parsers",name:"Parsers",type:n,children:[{path:"/ceidg-api/src/Parsers/BaseParser.php",name:"BaseParser.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Parsers/IdParser.php",name:"IdParser.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Parsers/MigrationDataParser.php",name:"MigrationDataParser.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/Validators",name:"Validators",type:n,children:[{path:"/ceidg-api/src/Validators/BaseValidator.php",name:"BaseValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/EmptyValidator.php",name:"EmptyValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/NIPValidator.php",name:"NIPValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/NIP_SCValidator.php",name:"NIP_SCValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/PKDValidator.php",name:"PKDValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/PostcodeValidator.php",name:"PostcodeValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/REGONValidator.php",name:"REGONValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/REGON_SCValidator.php",name:"REGON_SCValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/src/Validators/StatusValidator.php",name:"StatusValidator.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/src/CeidgApi.php",name:"CeidgApi.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/tests",name:m,type:n,children:[{path:"/ceidg-api/tests/CeidgTest.php",name:"CeidgTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/ceidg-api/.coveralls.yml",name:g,type:e,exclude:[{}],stacks:{language:r,icon:y}},{path:"/ceidg-api/.php_cs.dist",name:".php_cs.dist",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/ceidg-api/.styleci.yml",name:".styleci.yml",type:e,exclude:[{}],stacks:{language:o,icon:"logos:styleci"}},{path:"/ceidg-api/.travis.yml",name:x,type:e,exclude:[{}],stacks:{language:o,icon:v}},{path:"/ceidg-api/LICENSE",name:"LICENSE",type:e,exclude:[{}],stacks:{language:c,icon:$}},{path:"/ceidg-api/README.md",name:h,type:e,exclude:[{}],stacks:{language:c,icon:l}},{path:"/ceidg-api/composer.json",name:k,type:e,exclude:[{}],stacks:{language:f,icon:j}},{path:"/ceidg-api/phpunit.xml.dist",name:C,type:e,exclude:[{}],stacks:{language:"xml",icon:_}}],exclude:[{}],yaml:{}},{path:"/php-jotta",name:"php-jotta",type:n,children:[{path:"/php-jotta/src",name:"src",type:n,children:[{path:"/php-jotta/src/Client",name:"Client",type:n,children:[{path:"/php-jotta/src/Client/Contracts",name:d,type:n,children:[{path:"/php-jotta/src/Client/Contracts/NamespaceContract.php",name:"NamespaceContract.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Contracts/ScopeContract.php",name:"ScopeContract.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Exceptions",name:"Exceptions",type:n,children:[{path:"/php-jotta/src/Client/Exceptions/JottaException.php",name:"JottaException.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Responses",name:"Responses",type:n,children:[{path:"/php-jotta/src/Client/Responses/Namespaces",name:"Namespaces",type:n,children:[{path:"/php-jotta/src/Client/Responses/Namespaces/Attributes.php",name:"Attributes.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/Device.php",name:"Device.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/File.php",name:"File.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/Folder.php",name:"Folder.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/Metadata.php",name:"Metadata.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/MountPoint.php",name:"MountPoint.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/Revision.php",name:"Revision.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Responses/Namespaces/User.php",name:"User.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Responses/ElementMapper.php",name:"ElementMapper.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:T,name:E,type:e,exclude:[{}],stacks:{language:a,icon:t},content:b},{path:"/php-jotta/src/Client/Responses/XmlResponseSerializer.php",name:"XmlResponseSerializer.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Client/Scopes",name:"Scopes",type:n,children:[{path:"/php-jotta/src/Client/Scopes/AccountScope.php",name:"AccountScope.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Scopes/DeviceScope.php",name:"DeviceScope.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Scopes/DirectoryScope.php",name:"DirectoryScope.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Scopes/FileScope.php",name:"FileScope.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Client/Scopes/Scope.php",name:"Scope.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Support",name:S,type:n,children:[{path:"/php-jotta/src/Support/JFileInfo.php",name:"JFileInfo.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Support/OperationReport.php",name:"OperationReport.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Traits",name:"Traits",type:n,children:[{path:"/php-jotta/src/Traits/DirectoryConfigTrait.php",name:"DirectoryConfigTrait.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Traits/PathTrait.php",name:"PathTrait.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/Traits/ScopeConfigTrait.php",name:"ScopeConfigTrait.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/src/Jotta.php",name:"Jotta.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/JottaAdapter.php",name:"JottaAdapter.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/src/JottaClient.php",name:"JottaClient.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests",name:m,type:n,children:[{path:"/php-jotta/tests/Mock",name:"Mock",type:n,children:[{path:"/php-jotta/tests/Mock/JottaApiV1Mock.php",name:"JottaApiV1Mock.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Mock/ResponseBodyMock.php",name:"ResponseBodyMock.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Support",name:S,type:n,children:[{path:"/php-jotta/tests/Support/AssertExceptions.php",name:"AssertExceptions.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Support/DirectoryScopeExtended.php",name:"DirectoryScopeExtended.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Support/JottaTestTrait.php",name:"JottaTestTrait.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Unit",name:"Unit",type:n,children:[{path:"/php-jotta/tests/Unit/_001_Architecture",name:"_001_Architecture",type:n,children:[{path:"/php-jotta/tests/Unit/_001_Architecture/Test001_ArchitectureTest.php",name:"Test001_ArchitectureTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_001_Architecture/Test003_XmlSerializerTest.php",name:"Test003_XmlSerializerTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_001_Architecture/Test005_XmlNamespacesTest.php",name:"Test005_XmlNamespacesTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_001_Architecture/Test006_UploadReportTest.php",name:"Test006_UploadReportTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Unit/_003_Scopes",name:"_003_Scopes",type:n,children:[{path:"/php-jotta/tests/Unit/_003_Scopes/Test001_AccountTest.php",name:"Test001_AccountTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test003_DeviceTest.php",name:"Test003_DeviceTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test011_DirectoryTest.php",name:"Test011_DirectoryTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test013_FileTest.php",name:"Test013_FileTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test013a_FileDownloadTest.php",name:"Test013a_FileDownloadTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test013b_FileUploadTest.php",name:"Test013b_FileUploadTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}},{path:"/php-jotta/tests/Unit/_003_Scopes/Test015b_FolderRecursiveUploadTest.php",name:"Test015b_FolderRecursiveUploadTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/Unit/_005_Exceptions",name:"_005_Exceptions",type:n,children:[{path:"/php-jotta/tests/Unit/_005_Exceptions/Test001_ExceptionsTest.php",name:"Test001_ExceptionsTest.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/coverage",name:"coverage",type:n,children:[],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/temp",name:"temp",type:n,children:[],exclude:[{}],yaml:{}},{path:"/php-jotta/tests/JottaTestCase.php",name:"JottaTestCase.php",type:e,exclude:[{}],stacks:{language:a,icon:t}}],exclude:[{}],yaml:{}},{path:"/php-jotta/.coveralls.yml",name:g,type:e,exclude:[{}],stacks:{language:r,icon:y}},{path:"/php-jotta/.travis.yml",name:x,type:e,exclude:[{}],stacks:{language:o,icon:v}},{path:"/php-jotta/CODE_OF_CONDUCT.md",name:"CODE_OF_CONDUCT.md",type:e,exclude:[{}],stacks:{language:c,icon:l}},{path:"/php-jotta/LICENSE.md",name:"LICENSE.md",type:e,exclude:[{}],stacks:{language:c,icon:l}},{path:"/php-jotta/README.md",name:h,type:e,exclude:[{}],stacks:{language:c,icon:l}},{path:"/php-jotta/composer.json",name:k,type:e,exclude:[{}],stacks:{language:f,icon:j}},{path:"/php-jotta/phpunit.xml.dist",name:C,type:e,exclude:[{}],stacks:{language:"xml",icon:_}}],exclude:[{}],yaml:{}},{path:"/varia",name:"varia",type:n,children:[{path:"/varia/docker",name:"docker",type:n,children:[{path:"/varia/docker/ffmpeg",name:"ffmpeg",type:n,children:[{path:"/varia/docker/ffmpeg/Dockerfile",name:"Dockerfile",type:e,exclude:[{}],stacks:{language:"dockerfile",icon:"logos:docker-icon"}}],exclude:[{}],yaml:{}},{path:"/varia/docker/nginx-proxy-letsencrypt",name:"nginx-proxy-letsencrypt",type:n,children:[{path:"/varia/docker/nginx-proxy-letsencrypt/docker-compose.yml",name:"docker-compose.yml",type:e,exclude:[{}],stacks:{language:r,icon:$}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/js",name:"js",type:n,children:[{path:"/varia/js/threejs-playground",name:"threejs-playground",type:n,children:[{path:"/varia/js/threejs-playground/three.js",name:"three.js",type:e,exclude:[{}],stacks:{language:V,icon:N}}],exclude:[{}],yaml:{}},{path:"/varia/js/tpay-notification",name:"tpay-notification",type:n,children:[{path:"/varia/js/tpay-notification/tnotification.js",name:"tnotification.js",type:e,exclude:[{}],stacks:{language:V,icon:N}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/vue",name:p,type:n,children:[{path:"/varia/vue/calendar",name:"calendar",type:n,children:[{path:"/varia/vue/calendar/event-list",name:"event-list",type:n,children:[{path:"/varia/vue/calendar/event-list/EventListItem.vue",name:"EventListItem.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}}],exclude:[{}],yaml:{}},{path:"/varia/vue/calendar/EventContent.vue",name:"EventContent.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}},{path:"/varia/vue/calendar/EventList.vue",name:"EventList.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}},{path:"/varia/vue/calendar/MonthStrips.vue",name:"MonthStrips.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}},{path:"/varia/vue/calendar/RomanMonths.vue",name:"RomanMonths.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}},{path:"/varia/vue/calendar/Timeline.vue",name:"Timeline.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}},{path:"/varia/vue/calendar/YearEvents.vue",name:"YearEvents.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}}],exclude:[{}],yaml:{}},{path:"/varia/vue/directory-tree",name:"directory-tree",type:n,children:[{path:"/varia/vue/directory-tree/tree",name:"tree",type:n,children:[{path:"/varia/vue/directory-tree/tree/node",name:"node",type:n,children:[{path:"/varia/vue/directory-tree/tree/node/TreeNodeExpander.vue",name:"TreeNodeExpander.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}},{path:"/varia/vue/directory-tree/tree/node/TreeNodeName.vue",name:"TreeNodeName.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}}],exclude:[{}],yaml:{}},{path:"/varia/vue/directory-tree/tree/TreeNode.vue",name:"TreeNode.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/varia/vue/piechart",name:"piechart",type:n,children:[{path:"/varia/vue/piechart/PieChart.vue",name:"PieChart.vue",type:e,exclude:[{}],stacks:{language:p,icon:s}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}}],exclude:[{}],yaml:{}},{path:"/README.md",name:h,type:e,exclude:[{}],stacks:{language:c,icon:l}}],u.exclude=[{}],u.yaml={},R.path=T,R.name=E,R.type=e,R.exclude=[{}],R.stacks={language:a,icon:t},R.content=b,{layout:"default",data:[{tree:u,pathNode:R,pathMatch:A}],fetch:[],error:i,state:{auth:{token:i,visitor:i,word:i},layout:{loading:{icon:i,name:i},tree:!0},stacks:{stacks:{php:{hex:"#ff0000",icon:{show:!0,name:a}}}},tree:{path:{active:"",expanded:[""]},tree:u,pathMatch:A,pathNode:R}},serverRendered:!0,routePath:"/php-jotta/src/Client/Responses/ResponseNamespace__php"}}("file","php","logos:php","dir","vue","logos:vue","markdown",null,"ri:markdown-fill","yaml","YAML","README.md",{},"Contracts","tests",".coveralls.yml","simple-icons:coveralls",".travis.yml","logos:travis-ci","bx:bxs-file-blank","composer.json","json","logos:composer","phpunit.xml.dist","mdi:xml","/php-jotta/src/Client/Responses/ResponseNamespace.php","ResponseNamespace.php","<?php\n\n/*\n * This file is a part of the PHP client for unofficial Jottacloud API, with a built-in Flysystem adapter.\n *\n * @author Marek Kapusta <fundacja@vegvisir.org.pl>\n */\n\nnamespace Vegfund\\Jotta\\Client\\Responses;\n\nuse DateTime;\nuse Illuminate\\Support\\Str;\nuse Sabre\\Xml\\LibXMLException;\nuse Sabre\\Xml\\ParseException;\nuse Sabre\\Xml\\Reader;\nuse Sabre\\Xml\\XmlDeserializable;\nuse Vegfund\\Jotta\\Client\\Contracts\\NamespaceContract;\nuse Vegfund\\Jotta\\Client\\Exceptions\\JottaException;\nuse Vegfund\\Jotta\\Client\\Responses\\Namespaces\\Attributes;\n\n/**\n * Class AbstractNamespace.\n */\nabstract class ResponseNamespace implements NamespaceContract, XmlDeserializable\n{\n    /**\n     * @var array\n     */\n    protected $keyValueMap = [];\n\n    /**\n     * @var array\n     */\n    protected $enumMap = [];\n\n    /**\n     * @var array\n     */\n    protected $objectValueMap = [];\n\n    /**\n     * @var Attributes\n     */\n    public $attributes;\n\n    /**\n     * @param $name\n     *\n     * @throws JottaException\n     *\n     * @return null|mixed\n     */\n    public function __get($name)\n    {\n        if (null !== ($value = $this->getAttribute($name))) {\n            return $value;\n        }\n\n        throw new JottaException('The attribute '.$name.' does not exist.');\n    }\n\n    /**\n     * @param $name\n     *\n     * @return mixed|null\n     */\n    final public function getAttribute($name)\n    {\n        return (isset($this->attributes) && $this->attributes instanceof Attributes) ? $this->attributes->get($name) : null;\n    }\n\n    /**\n     * @param $name\n     * @param $arguments\n     *\n     * @throws JottaException\n     *\n     * @return null|mixed\n     */\n    public function __call($name, $arguments)\n    {\n        if ('get' === substr($name, 0, 3)) {\n            $name = Str::camel(substr($name, 3));\n\n            return $this->{$name};\n        }\n\n        throw new JottaException('The method '.$name.' does not exist.');\n    }\n\n    /**\n     * @param $data\n     *\n     * @throws LibXMLException\n     * @throws ParseException\n     *\n     * @return NamespaceContract\n     *\n     * @todo Attributes for each object type\n     */\n    final protected function attachFields($data)\n    {\n        $children = $data;\n\n        if ($data instanceof  Reader) {\n            $this->setAttributes(new Attributes($data->parseAttributes()));\n            $children = $data->parseInnerTree();\n        }\n\n        if (is_array($children)) {\n            $this->attachKeyValues($children);\n            $this->attachEnums($children);\n            $this->attachObjectValues($children);\n        }\n\n        return $this;\n    }\n\n    /**\n     * @param Attributes|null $attributes\n     *\n     * @todo Attributes casting\n     */\n    final protected function setAttributes(Attributes $attributes = null)\n    {\n        $this->attributes = $attributes ?: new Attributes([]);\n\n        foreach ($attributes->all() as $key => $value) {\n            if (!isset($this->{$key})) {\n                $this->{$key} = $value;\n            }\n        }\n    }\n\n    /**\n     * @param array $children\n     */\n    final protected function attachObjectValues($children)\n    {\n        foreach ($children as $child) {\n            $field = substr($child['name'], 2);\n            if (in_array($field, $this->objectValueMap)) {\n                $this->{$field} = $child['value'];\n            }\n        }\n    }\n\n    /**\n     * @param array $children\n     */\n    final protected function attachKeyValues($children)\n    {\n        $keyValues = $this->getKeyValueFields($children);\n\n        foreach ($this->getKeyValueMap() as $field) {\n            list($field, $fieldType) = [\n                array_keys($field)[0],\n                array_values($field)[0],\n            ];\n\n            if (isset($keyValues['{}'.$field])) {\n                $this->{Str::camel($field)} = $this->castPrimitives($keyValues['{}'.$field], $fieldType);\n            }\n        }\n    }\n\n    /**\n     * @return array\n     */\n    final protected function getKeyValueMap()\n    {\n        return array_map(function ($item) {\n            if (!is_array($item)) {\n                return [$item => 'string'];\n            }\n\n            return $item;\n        }, $this->keyValueMap);\n    }\n\n    /**\n     * @param array $children\n     */\n    final protected function attachEnums($children)\n    {\n        foreach ($children as $child) {\n            $field = substr($child['name'], 2);\n            if (in_array($field, $this->enumMap)) {\n                $this->{$field} = $child['value'];\n            }\n        }\n    }\n\n    /**\n     * @param $value\n     * @param string $type\n     *\n     * @return bool|DateTime|false|float|int|string\n     */\n    final protected function castPrimitives($value, $type = 'string')\n    {\n        switch ($type) {\n            case 'int':\n                $value = (int) $value;\n\n                break;\n            case 'float':\n                $value = (float) $value;\n\n                break;\n            case 'bool':\n                $value = (true === $value || 'true' === $value || '1' === $value || 1 === $value) && (false !== $value || 'false' !== $value || '0' !== $value || 0 !== $value);\n\n                break;\n            case 'datetime':\n                $value = DateTime::createFromFormat('Y-m-d-\\TH:i:sO', $value);\n\n                break;\n            default:\n                $value = (string) $value;\n\n                break;\n        }\n\n        return $value;\n    }\n\n    /**\n     * @param array $children\n     *\n     * @return array\n     */\n    final protected function getKeyValueFields($children)\n    {\n        $keyValueFields = [];\n\n        foreach ($children as $child) {\n            if (!\\is_object($child['value'])) {\n                $keyValueFields[$child['name']] = $child['value'];\n            }\n        }\n\n        return $keyValueFields;\n    }\n\n    /**\n     * @param $fields\n     *\n     * @return ResponseNamespace\n     */\n    final public function except($fields)\n    {\n        $fields = is_array($fields) ? $fields : [$fields];\n\n        $processed = clone $this;\n\n        foreach ($fields as $field) {\n            if (isset($processed->{$field})) {\n                unset($processed->{$field});\n            }\n        }\n\n        return $processed;\n    }\n}\n","Support","javascript","logos:javascript",{},"php-jotta/src/Client/Responses/ResponseNamespace__php")