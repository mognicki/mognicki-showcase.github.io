{"tree":{"path":"/","name":"repository","type":"dir","children":[{"path":"/ceidg-api","name":"ceidg-api","type":"dir","children":[{"path":"/ceidg-api/src","name":"src","type":"dir","children":[{"path":"/ceidg-api/src/Contracts","name":"Contracts","type":"dir","children":[{"path":"/ceidg-api/src/Contracts/CeidgApiContract.php","name":"CeidgApiContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Contracts/CeidgEnvelopeContract.php","name":"CeidgEnvelopeContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Contracts/ValidatorContract.php","name":"ValidatorContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Contracts/XmlParserContract.php","name":"XmlParserContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/Envelopes","name":"Envelopes","type":"dir","children":[{"path":"/ceidg-api/src/Envelopes/CeidgEnvelope.php","name":"CeidgEnvelope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Envelopes/GetId.php","name":"GetId.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Envelopes/GetMigrationData.php","name":"GetMigrationData.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Envelopes/GetMigrationData201901.php","name":"GetMigrationData201901.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/Parsers","name":"Parsers","type":"dir","children":[{"path":"/ceidg-api/src/Parsers/BaseParser.php","name":"BaseParser.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Parsers/IdParser.php","name":"IdParser.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Parsers/MigrationDataParser.php","name":"MigrationDataParser.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/Validators","name":"Validators","type":"dir","children":[{"path":"/ceidg-api/src/Validators/BaseValidator.php","name":"BaseValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/EmptyValidator.php","name":"EmptyValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/NIPValidator.php","name":"NIPValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/NIP_SCValidator.php","name":"NIP_SCValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/PKDValidator.php","name":"PKDValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/PostcodeValidator.php","name":"PostcodeValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/REGONValidator.php","name":"REGONValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/REGON_SCValidator.php","name":"REGON_SCValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/src/Validators/StatusValidator.php","name":"StatusValidator.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/src/CeidgApi.php","name":"CeidgApi.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/tests","name":"tests","type":"dir","children":[{"path":"/ceidg-api/tests/CeidgTest.php","name":"CeidgTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/ceidg-api/.coveralls.yml","name":".coveralls.yml","type":"file","exclude":[{}],"stacks":{"language":"yaml","icon":"simple-icons:coveralls"}},{"path":"/ceidg-api/.php_cs.dist","name":".php_cs.dist","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/ceidg-api/.styleci.yml","name":".styleci.yml","type":"file","exclude":[{}],"stacks":{"language":"YAML","icon":"logos:styleci"}},{"path":"/ceidg-api/.travis.yml","name":".travis.yml","type":"file","exclude":[{}],"stacks":{"language":"YAML","icon":"logos:travis-ci"}},{"path":"/ceidg-api/LICENSE","name":"LICENSE","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"bx:bxs-file-blank"}},{"path":"/ceidg-api/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/ceidg-api/composer.json","name":"composer.json","type":"file","exclude":[{}],"stacks":{"language":"json","icon":"logos:composer"}},{"path":"/ceidg-api/phpunit.xml.dist","name":"phpunit.xml.dist","type":"file","exclude":[{}],"stacks":{"language":"xml","icon":"mdi:xml"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta","name":"php-jotta","type":"dir","children":[{"path":"/php-jotta/src","name":"src","type":"dir","children":[{"path":"/php-jotta/src/Client","name":"Client","type":"dir","children":[{"path":"/php-jotta/src/Client/Contracts","name":"Contracts","type":"dir","children":[{"path":"/php-jotta/src/Client/Contracts/NamespaceContract.php","name":"NamespaceContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Contracts/ScopeContract.php","name":"ScopeContract.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Exceptions","name":"Exceptions","type":"dir","children":[{"path":"/php-jotta/src/Client/Exceptions/JottaException.php","name":"JottaException.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Responses","name":"Responses","type":"dir","children":[{"path":"/php-jotta/src/Client/Responses/Namespaces","name":"Namespaces","type":"dir","children":[{"path":"/php-jotta/src/Client/Responses/Namespaces/Attributes.php","name":"Attributes.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Device.php","name":"Device.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/File.php","name":"File.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Folder.php","name":"Folder.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Metadata.php","name":"Metadata.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/MountPoint.php","name":"MountPoint.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/Revision.php","name":"Revision.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/Namespaces/User.php","name":"User.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Responses/ElementMapper.php","name":"ElementMapper.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/ResponseNamespace.php","name":"ResponseNamespace.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Responses/XmlResponseSerializer.php","name":"XmlResponseSerializer.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Client/Scopes","name":"Scopes","type":"dir","children":[{"path":"/php-jotta/src/Client/Scopes/AccountScope.php","name":"AccountScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/DeviceScope.php","name":"DeviceScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/DirectoryScope.php","name":"DirectoryScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/FileScope.php","name":"FileScope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Client/Scopes/Scope.php","name":"Scope.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Support","name":"Support","type":"dir","children":[{"path":"/php-jotta/src/Support/JFileInfo.php","name":"JFileInfo.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Support/OperationReport.php","name":"OperationReport.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Traits","name":"Traits","type":"dir","children":[{"path":"/php-jotta/src/Traits/DirectoryConfigTrait.php","name":"DirectoryConfigTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Traits/PathTrait.php","name":"PathTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/Traits/ScopeConfigTrait.php","name":"ScopeConfigTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/src/Jotta.php","name":"Jotta.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/JottaAdapter.php","name":"JottaAdapter.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/src/JottaClient.php","name":"JottaClient.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests","name":"tests","type":"dir","children":[{"path":"/php-jotta/tests/Mock","name":"Mock","type":"dir","children":[{"path":"/php-jotta/tests/Mock/JottaApiV1Mock.php","name":"JottaApiV1Mock.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Mock/ResponseBodyMock.php","name":"ResponseBodyMock.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Support","name":"Support","type":"dir","children":[{"path":"/php-jotta/tests/Support/AssertExceptions.php","name":"AssertExceptions.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Support/DirectoryScopeExtended.php","name":"DirectoryScopeExtended.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Support/JottaTestTrait.php","name":"JottaTestTrait.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Unit","name":"Unit","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_001_Architecture","name":"_001_Architecture","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_001_Architecture/Test001_ArchitectureTest.php","name":"Test001_ArchitectureTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_001_Architecture/Test003_XmlSerializerTest.php","name":"Test003_XmlSerializerTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_001_Architecture/Test005_XmlNamespacesTest.php","name":"Test005_XmlNamespacesTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_001_Architecture/Test006_UploadReportTest.php","name":"Test006_UploadReportTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Unit/_003_Scopes","name":"_003_Scopes","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_003_Scopes/Test001_AccountTest.php","name":"Test001_AccountTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test003_DeviceTest.php","name":"Test003_DeviceTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test011_DirectoryTest.php","name":"Test011_DirectoryTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test013_FileTest.php","name":"Test013_FileTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test013a_FileDownloadTest.php","name":"Test013a_FileDownloadTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test013b_FileUploadTest.php","name":"Test013b_FileUploadTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}},{"path":"/php-jotta/tests/Unit/_003_Scopes/Test015b_FolderRecursiveUploadTest.php","name":"Test015b_FolderRecursiveUploadTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/Unit/_005_Exceptions","name":"_005_Exceptions","type":"dir","children":[{"path":"/php-jotta/tests/Unit/_005_Exceptions/Test001_ExceptionsTest.php","name":"Test001_ExceptionsTest.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/coverage","name":"coverage","type":"dir","children":[],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/temp","name":"temp","type":"dir","children":[],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/tests/JottaTestCase.php","name":"JottaTestCase.php","type":"file","exclude":[{}],"stacks":{"language":"php","icon":"logos:php"}}],"exclude":[{}],"yaml":{}},{"path":"/php-jotta/.coveralls.yml","name":".coveralls.yml","type":"file","exclude":[{}],"stacks":{"language":"yaml","icon":"simple-icons:coveralls"}},{"path":"/php-jotta/.travis.yml","name":".travis.yml","type":"file","exclude":[{}],"stacks":{"language":"YAML","icon":"logos:travis-ci"}},{"path":"/php-jotta/CODE_OF_CONDUCT.md","name":"CODE_OF_CONDUCT.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/php-jotta/LICENSE.md","name":"LICENSE.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/php-jotta/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}},{"path":"/php-jotta/composer.json","name":"composer.json","type":"file","exclude":[{}],"stacks":{"language":"json","icon":"logos:composer"}},{"path":"/php-jotta/phpunit.xml.dist","name":"phpunit.xml.dist","type":"file","exclude":[{}],"stacks":{"language":"xml","icon":"mdi:xml"}}],"exclude":[{}],"yaml":{}},{"path":"/varia","name":"varia","type":"dir","children":[{"path":"/varia/docker","name":"docker","type":"dir","children":[{"path":"/varia/docker/ffmpeg","name":"ffmpeg","type":"dir","children":[{"path":"/varia/docker/ffmpeg/Dockerfile","name":"Dockerfile","type":"file","exclude":[{}],"stacks":{"language":"dockerfile","icon":"logos:docker-icon"}}],"exclude":[{}],"yaml":{}},{"path":"/varia/docker/nginx-proxy-letsencrypt","name":"nginx-proxy-letsencrypt","type":"dir","children":[{"path":"/varia/docker/nginx-proxy-letsencrypt/docker-compose.yml","name":"docker-compose.yml","type":"file","exclude":[{}],"stacks":{"language":"yaml","icon":"bx:bxs-file-blank"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/varia/js","name":"js","type":"dir","children":[{"path":"/varia/js/threejs-playground","name":"threejs-playground","type":"dir","children":[{"path":"/varia/js/threejs-playground/three.js","name":"three.js","type":"file","exclude":[{}],"stacks":{"language":"javascript","icon":"logos:javascript"},"content":"const renderer = new WebGLRenderer()\nrenderer.setSize(window.innerWidth, window.innerHeight)\ndocument.querySelector('.scene-container').appendChild(renderer.domElement)\n\nconst scene = new Scene()\nconst camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n\nnew TextureLoader().load('/textures/teak.jpg', (texture) => {\n    new TextureLoader().load('/textures/dark.jpg', (darkTexture) => {\n        const material = new MeshStandardMaterial({ map: texture })\n        const darkWood = new MeshStandardMaterial({ map: darkTexture })\n        const concrete = new MeshStandardMaterial({ color: 0x888888, roughness: 0.8, refractionRatio: 0.8 })\n\n        const glass = new MeshPhongMaterial({\n            transparent: true,\n            opacity: 0.1,\n            color: 0x000000,\n            refractionRatio: 0.8\n        })\n\n        for (let i = 0; i < 3; i++) {\n            const geometryBottom = new BoxGeometry(120 / 100, 2 / 100, 40 / 100)\n            const cubeBottom = new Mesh(geometryBottom, material)\n\n            cubeBottom.position.y = (i * 80) / 100\n\n            scene.add(cubeBottom)\n\n            const geometryTop = new BoxGeometry(120 / 100, 2 / 100, 40 / 100)\n            const cubeTop = new Mesh(geometryTop, material)\n            cubeTop.receiveShadow = true\n            cubeTop.castShadow = true\n\n            cubeTop.position.y = ((i * 80) + 38) / 100\n\n            scene.add(cubeTop)\n\n            const geometryLeft = new BoxGeometry(2 / 100, 40 / 100, 40 / 100)\n            const cubeLeft = new Mesh(geometryLeft, material)\n\n            cubeLeft.position.y = ((i * 80) + 19) / 100\n            cubeLeft.position.x = (-60) / 100\n            cubeLeft.receiveShadow = true\n            cubeLeft.castShadow = true\n\n            scene.add(cubeLeft)\n\n            const geometryRight = new BoxGeometry(2 / 100, 40 / 100, 40 / 100)\n            const cubeRight = new Mesh(geometryRight, material)\n\n            cubeRight.position.y = ((i * 80) + 19) / 100\n            cubeRight.position.x = (60) / 100\n            cubeRight.receiveShadow = true\n            cubeRight.castShadow = true\n\n            scene.add(cubeRight)\n\n            const geometryBack = new BoxGeometry(120 / 100, 40 / 100, 2 / 100)\n            const cubeBack = new Mesh(geometryBack, material)\n\n            cubeBack.position.y = ((i * 80) + 19) / 100\n            cubeBack.position.x = 0\n            cubeBack.position.z = (-20) / 100\n            cubeBack.receiveShadow = true\n            cubeBack.castShadow = true\n\n            scene.add(cubeBack)\n\n            const geometryGlass = new BoxGeometry(40 / 100, 36 / 100, 0.5 / 100)\n            const cubeGlass = new Mesh(geometryGlass, glass)\n\n            cubeGlass.position.y = ((i * 80) + 19) / 100\n            cubeGlass.position.x = Math.floor(Math.random() * 30) / 100\n            cubeGlass.position.z = (18) / 100\n            cubeGlass.receiveShadow = false\n            cubeGlass.castShadow = true\n\n            scene.add(cubeGlass)\n\n            const rawPoints = [\n                [0.1, 0],\n                [0.12, 0.1],\n                [0.13, 0.3],\n                [0.15, 0.5],\n                [0.13, 0.7],\n                [0.12, 0.9],\n                [0.1, 1]\n            ]\n\n            const pointsProp = rawPoints.map((p) => {\n                return new Vector2(\n                    p[0] / 10 * 1.5,\n                    p[1] * 38 / 100\n                )\n            })\n            const geometryProp = new LatheGeometry(pointsProp)\n            const latheProp = new Mesh(geometryProp, darkWood)\n\n            latheProp.position.y = ((i * 80) + 1) / 100\n            latheProp.position.z = 15 / 100\n\n            scene.add(latheProp)\n        }\n\n        // const geometryBack = new BoxGeometry(120 / 100, 40 / 100, 2 / 100)\n        // const cubeBack = new Mesh(geometryBack, material)\n        //\n        // cubeBack.position.y = ((i * 80) + 19) / 100\n        // cubeBack.position.x = 0\n        // cubeBack.position.z = (-20) / 100\n        // cubeBack.receiveShadow = true\n        // cubeBack.castShadow = true\n\n        for (let i = 0; i < 2; i++) {\n            const frontLeg = new Mesh(new BoxGeometry(3 / 100, 250 / 100, 5 / 100), darkWood)\n            frontLeg.position.y = 0.85\n            frontLeg.position.x = i === 0 ? -63 / 100 : 63 / 100\n            frontLeg.position.z = 10 / 100\n            frontLeg.receiveShadow = true\n            frontLeg.castShadow = true\n\n            scene.add(frontLeg)\n\n            const backLeg = new Mesh(new BoxGeometry(3 / 100, 250 / 100, 5 / 100), darkWood)\n            backLeg.position.y = 0.85\n            backLeg.position.x = i === 0 ? -63 / 100 : 63 / 100\n            backLeg.position.z = -7 / 100\n            backLeg.receiveShadow = true\n            backLeg.castShadow = true\n\n            scene.add(backLeg)\n\n            const topLeg = new Mesh(new BoxGeometry(3 / 100, 5 / 100, 15 / 100), darkWood)\n            topLeg.position.y = 2.05\n            topLeg.position.x = i === 0 ? (-66 / 100) : 66 / 100\n            topLeg.position.z = 3 / 100\n            topLeg.receiveShadow = true\n            topLeg.castShadow = true\n\n            scene.add(topLeg)\n        }\n\n        camera.position.x = -1.5\n        camera.position.z = 1.5\n        camera.position.y = 1.2\n        camera.rotateX(-0.05)\n        camera.rotateY(-0.3)\n\n        const hemiLight = new HemisphereLight(0xFFFFFF, 0xFFFFFF, 0.6)\n        hemiLight.color.setHSL(1, 1, 1)\n        hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n        hemiLight.position.set(0, 50, 0)\n        scene.add(hemiLight)\n\n        const hemiLightHelper = new HemisphereLightHelper(hemiLight, 10)\n        scene.add(hemiLightHelper)\n\n        const floorMat = new MeshStandardMaterial({\n            roughness: 0.8,\n            color: 0x333333,\n            metalness: 0.2,\n            bumpScale: 0.0005\n        })\n        const floorGeometry = new PlaneBufferGeometry(20, 20)\n        const floorMesh = new Mesh(floorGeometry, floorMat)\n        floorMesh.receiveShadow = true\n        floorMesh.rotation.x = -Math.PI / 2.0\n        floorMesh.position.y = -0.1\n        scene.add(floorMesh)\n\n        const wallGeometry = new PlaneBufferGeometry(20, 20)\n        const wallMesh = new Mesh(wallGeometry, concrete)\n        wallMesh.receiveShadow = true\n        // floorMesh.rotation.x = -Math.PI / 2.0\n        wallMesh.position.y = -0.1\n        wallMesh.position.z = -27 / 100\n        scene.add(wallMesh)\n\n        renderer.render(scene, camera)\n    })\n})"}],"exclude":[{}],"yaml":{}},{"path":"/varia/js/tpay-notification","name":"tpay-notification","type":"dir","children":[{"path":"/varia/js/tpay-notification/tnotification.js","name":"tnotification.js","type":"file","exclude":[{}],"stacks":{"language":"javascript","icon":"logos:javascript"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/varia/vue","name":"vue","type":"dir","children":[{"path":"/varia/vue/calendar","name":"calendar","type":"dir","children":[{"path":"/varia/vue/calendar/event-list","name":"event-list","type":"dir","children":[{"path":"/varia/vue/calendar/event-list/EventListItem.vue","name":"EventListItem.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}}],"exclude":[{}],"yaml":{}},{"path":"/varia/vue/calendar/EventContent.vue","name":"EventContent.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}},{"path":"/varia/vue/calendar/EventList.vue","name":"EventList.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}},{"path":"/varia/vue/calendar/MonthStrips.vue","name":"MonthStrips.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}},{"path":"/varia/vue/calendar/RomanMonths.vue","name":"RomanMonths.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}},{"path":"/varia/vue/calendar/Timeline.vue","name":"Timeline.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}},{"path":"/varia/vue/calendar/YearEvents.vue","name":"YearEvents.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}}],"exclude":[{}],"yaml":{}},{"path":"/varia/vue/directory-tree","name":"directory-tree","type":"dir","children":[{"path":"/varia/vue/directory-tree/tree","name":"tree","type":"dir","children":[{"path":"/varia/vue/directory-tree/tree/node","name":"node","type":"dir","children":[{"path":"/varia/vue/directory-tree/tree/node/TreeNodeExpander.vue","name":"TreeNodeExpander.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}},{"path":"/varia/vue/directory-tree/tree/node/TreeNodeName.vue","name":"TreeNodeName.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}}],"exclude":[{}],"yaml":{}},{"path":"/varia/vue/directory-tree/tree/TreeNode.vue","name":"TreeNode.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/varia/vue/piechart","name":"piechart","type":"dir","children":[{"path":"/varia/vue/piechart/PieChart.vue","name":"PieChart.vue","type":"file","exclude":[{}],"stacks":{"language":"vue","icon":"logos:vue"}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}}],"exclude":[{}],"yaml":{}},{"path":"/README.md","name":"README.md","type":"file","exclude":[{}],"stacks":{"language":"markdown","icon":"ri:markdown-fill"}}],"exclude":[{}],"yaml":{}},"pathNode":{"path":"/varia/js/threejs-playground/three.js","name":"three.js","type":"file","exclude":[{}],"stacks":{"language":"javascript","icon":"logos:javascript"},"content":"const renderer = new WebGLRenderer()\nrenderer.setSize(window.innerWidth, window.innerHeight)\ndocument.querySelector('.scene-container').appendChild(renderer.domElement)\n\nconst scene = new Scene()\nconst camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n\nnew TextureLoader().load('/textures/teak.jpg', (texture) => {\n    new TextureLoader().load('/textures/dark.jpg', (darkTexture) => {\n        const material = new MeshStandardMaterial({ map: texture })\n        const darkWood = new MeshStandardMaterial({ map: darkTexture })\n        const concrete = new MeshStandardMaterial({ color: 0x888888, roughness: 0.8, refractionRatio: 0.8 })\n\n        const glass = new MeshPhongMaterial({\n            transparent: true,\n            opacity: 0.1,\n            color: 0x000000,\n            refractionRatio: 0.8\n        })\n\n        for (let i = 0; i < 3; i++) {\n            const geometryBottom = new BoxGeometry(120 / 100, 2 / 100, 40 / 100)\n            const cubeBottom = new Mesh(geometryBottom, material)\n\n            cubeBottom.position.y = (i * 80) / 100\n\n            scene.add(cubeBottom)\n\n            const geometryTop = new BoxGeometry(120 / 100, 2 / 100, 40 / 100)\n            const cubeTop = new Mesh(geometryTop, material)\n            cubeTop.receiveShadow = true\n            cubeTop.castShadow = true\n\n            cubeTop.position.y = ((i * 80) + 38) / 100\n\n            scene.add(cubeTop)\n\n            const geometryLeft = new BoxGeometry(2 / 100, 40 / 100, 40 / 100)\n            const cubeLeft = new Mesh(geometryLeft, material)\n\n            cubeLeft.position.y = ((i * 80) + 19) / 100\n            cubeLeft.position.x = (-60) / 100\n            cubeLeft.receiveShadow = true\n            cubeLeft.castShadow = true\n\n            scene.add(cubeLeft)\n\n            const geometryRight = new BoxGeometry(2 / 100, 40 / 100, 40 / 100)\n            const cubeRight = new Mesh(geometryRight, material)\n\n            cubeRight.position.y = ((i * 80) + 19) / 100\n            cubeRight.position.x = (60) / 100\n            cubeRight.receiveShadow = true\n            cubeRight.castShadow = true\n\n            scene.add(cubeRight)\n\n            const geometryBack = new BoxGeometry(120 / 100, 40 / 100, 2 / 100)\n            const cubeBack = new Mesh(geometryBack, material)\n\n            cubeBack.position.y = ((i * 80) + 19) / 100\n            cubeBack.position.x = 0\n            cubeBack.position.z = (-20) / 100\n            cubeBack.receiveShadow = true\n            cubeBack.castShadow = true\n\n            scene.add(cubeBack)\n\n            const geometryGlass = new BoxGeometry(40 / 100, 36 / 100, 0.5 / 100)\n            const cubeGlass = new Mesh(geometryGlass, glass)\n\n            cubeGlass.position.y = ((i * 80) + 19) / 100\n            cubeGlass.position.x = Math.floor(Math.random() * 30) / 100\n            cubeGlass.position.z = (18) / 100\n            cubeGlass.receiveShadow = false\n            cubeGlass.castShadow = true\n\n            scene.add(cubeGlass)\n\n            const rawPoints = [\n                [0.1, 0],\n                [0.12, 0.1],\n                [0.13, 0.3],\n                [0.15, 0.5],\n                [0.13, 0.7],\n                [0.12, 0.9],\n                [0.1, 1]\n            ]\n\n            const pointsProp = rawPoints.map((p) => {\n                return new Vector2(\n                    p[0] / 10 * 1.5,\n                    p[1] * 38 / 100\n                )\n            })\n            const geometryProp = new LatheGeometry(pointsProp)\n            const latheProp = new Mesh(geometryProp, darkWood)\n\n            latheProp.position.y = ((i * 80) + 1) / 100\n            latheProp.position.z = 15 / 100\n\n            scene.add(latheProp)\n        }\n\n        // const geometryBack = new BoxGeometry(120 / 100, 40 / 100, 2 / 100)\n        // const cubeBack = new Mesh(geometryBack, material)\n        //\n        // cubeBack.position.y = ((i * 80) + 19) / 100\n        // cubeBack.position.x = 0\n        // cubeBack.position.z = (-20) / 100\n        // cubeBack.receiveShadow = true\n        // cubeBack.castShadow = true\n\n        for (let i = 0; i < 2; i++) {\n            const frontLeg = new Mesh(new BoxGeometry(3 / 100, 250 / 100, 5 / 100), darkWood)\n            frontLeg.position.y = 0.85\n            frontLeg.position.x = i === 0 ? -63 / 100 : 63 / 100\n            frontLeg.position.z = 10 / 100\n            frontLeg.receiveShadow = true\n            frontLeg.castShadow = true\n\n            scene.add(frontLeg)\n\n            const backLeg = new Mesh(new BoxGeometry(3 / 100, 250 / 100, 5 / 100), darkWood)\n            backLeg.position.y = 0.85\n            backLeg.position.x = i === 0 ? -63 / 100 : 63 / 100\n            backLeg.position.z = -7 / 100\n            backLeg.receiveShadow = true\n            backLeg.castShadow = true\n\n            scene.add(backLeg)\n\n            const topLeg = new Mesh(new BoxGeometry(3 / 100, 5 / 100, 15 / 100), darkWood)\n            topLeg.position.y = 2.05\n            topLeg.position.x = i === 0 ? (-66 / 100) : 66 / 100\n            topLeg.position.z = 3 / 100\n            topLeg.receiveShadow = true\n            topLeg.castShadow = true\n\n            scene.add(topLeg)\n        }\n\n        camera.position.x = -1.5\n        camera.position.z = 1.5\n        camera.position.y = 1.2\n        camera.rotateX(-0.05)\n        camera.rotateY(-0.3)\n\n        const hemiLight = new HemisphereLight(0xFFFFFF, 0xFFFFFF, 0.6)\n        hemiLight.color.setHSL(1, 1, 1)\n        hemiLight.groundColor.setHSL(0.095, 1, 0.75)\n        hemiLight.position.set(0, 50, 0)\n        scene.add(hemiLight)\n\n        const hemiLightHelper = new HemisphereLightHelper(hemiLight, 10)\n        scene.add(hemiLightHelper)\n\n        const floorMat = new MeshStandardMaterial({\n            roughness: 0.8,\n            color: 0x333333,\n            metalness: 0.2,\n            bumpScale: 0.0005\n        })\n        const floorGeometry = new PlaneBufferGeometry(20, 20)\n        const floorMesh = new Mesh(floorGeometry, floorMat)\n        floorMesh.receiveShadow = true\n        floorMesh.rotation.x = -Math.PI / 2.0\n        floorMesh.position.y = -0.1\n        scene.add(floorMesh)\n\n        const wallGeometry = new PlaneBufferGeometry(20, 20)\n        const wallMesh = new Mesh(wallGeometry, concrete)\n        wallMesh.receiveShadow = true\n        // floorMesh.rotation.x = -Math.PI / 2.0\n        wallMesh.position.y = -0.1\n        wallMesh.position.z = -27 / 100\n        scene.add(wallMesh)\n\n        renderer.render(scene, camera)\n    })\n})"},"pathMatch":"varia/js/threejs-playground/three__js"}